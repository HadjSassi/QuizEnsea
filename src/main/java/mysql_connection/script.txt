use quizensea;

create schema IF NOT EXISTS quizensea;

select * from projet;
select * from Controle;
select * from Section;
select * from QCM;
select * from QCM_Reponses;
select * from QuestionLibre;
select * from Description;
select * from Description_Images;
select * from FontDevoir;
select * from FormatQuestion;
select * from Reponse;
select * from TypeDevoir;
select * from TypeNumero;


desc projet;
desc Controle;
desc Section;
desc QCM;
desc QCM_Reponses;
desc QuestionLibre;
desc Description;
desc Description_Images;
desc FontDevoir;
desc FormatQuestion;
desc Reponse;
desc TypeDevoir;
desc TypeNumero;



CREATE TABLE IF NOT EXISTS Projet
(
    idProjet           INT AUTO_INCREMENT PRIMARY KEY,
    nomProjet          VARCHAR(255) NOT NULL,
    localisationProjet VARCHAR(255),
    typeProjet         VARCHAR(100),
    creationDate       DATE DEFAULT (CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS Controle
(
    idControle           INT AUTO_INCREMENT PRIMARY KEY,
    nomDevoir            VARCHAR(255) NOT NULL,
    typeDevoir           VARCHAR(255),
    randomSeed           INT  DEFAULT (12345678),
    examHeader           TEXT,
    reponseHeader        TEXT,
    creationDate         DATE DEFAULT (CURRENT_DATE),
    projetID             INT,
    FOREIGN KEY (projetID) REFERENCES Projet (idProjet) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Section
(
    idSection        VARCHAR(255) PRIMARY KEY,
    ordreSection     INT,
    numberOfSections INT DEFAULT 0,
    controleID       INT,
    FOREIGN KEY (controleID) REFERENCES Controle (idControle) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS QCM
(
    idQCM     INT AUTO_INCREMENT PRIMARY KEY,
    question  TEXT NOT NULL,
    isQCU     BOOLEAN,
    sectionID VARCHAR(255),
    FOREIGN KEY (sectionID) REFERENCES Section (idSection) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS QCM_Reponses
(
    idReponse INT AUTO_INCREMENT PRIMARY KEY,
    qcmID     INT,
    reponse   TEXT,
    score     INT,
    isCorrect BOOLEAN,
    FOREIGN KEY (qcmID) REFERENCES QCM (idQCM) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS QuestionLibre
(
    idQuestionLibre INT AUTO_INCREMENT PRIMARY KEY,
    question TEXT NOT NULL,
    scoreTotal FLOAT,
    nombreScore INT,
    nombreLigne INT,
    tailleLigne FLOAT,
    rappel TEXT,
    sectionID VARCHAR(255),
    FOREIGN KEY (sectionID) REFERENCES Section (idSection) ON DELETE CASCADE);


CREATE TABLE IF NOT EXISTS Description
(
    idDescription INT AUTO_INCREMENT PRIMARY KEY,
    texte         TEXT,
    sectionID    VARCHAR(255),
    FOREIGN KEY (sectionID) REFERENCES Section (idSection) ON DELETE CASCADE
);

drop table description_images;

CREATE TABLE IF NOT EXISTS Description_Images
(
    idImage       INT AUTO_INCREMENT PRIMARY KEY,
    descriptionID INT,
    imagePath     VARCHAR(255),
    legendText    VARCHAR(255),
    imageWidth      FLOAT,
    FOREIGN KEY (descriptionID) REFERENCES Description (idDescription) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FontDevoir
(
    idFontDevoir INT AUTO_INCREMENT PRIMARY KEY,
    nomPolice    VARCHAR(100),
    sizePolice   INT
);

CREATE TABLE IF NOT EXISTS FormatQuestion
(
    idFormatQuestion INT AUTO_INCREMENT PRIMARY KEY,
    premierTexte     TEXT,
    isNumerated      BOOLEAN,
    numeroIncremente VARCHAR(50),
    deuxiemeTexte    TEXT
);

CREATE TABLE IF NOT EXISTS Reponse
(
    idReponse INT AUTO_INCREMENT PRIMARY KEY,
    reponse   TEXT,
    score     INT
);

CREATE TABLE IF NOT EXISTS TypeDevoir
(
    idTypeDevoir  INT AUTO_INCREMENT PRIMARY KEY,
    nomTypeDevoir VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS TypeNumero
(
    idTypeNumero  INT AUTO_INCREMENT PRIMARY KEY,
    nomTypeNumero VARCHAR(255) NOT NULL
);








SELECT section.idSection, qcm.isQCU, qcm.question AS question, section.ordreSection, 'QCU/QCM' AS type
FROM section
         JOIN qcm ON section.idSection = qcm.sectionID
WHERE section.controleID = 1
UNION
SELECT section.idSection, NULL AS isQCU, questionlibre.question AS question, section.ordreSection, 'QuestionLibre' AS type
FROM section
         JOIN questionlibre ON section.idSection = questionlibre.sectionID
WHERE section.controleID = 1
UNION
SELECT section.idSection, NULL AS isQCU, section.idSection AS question, section.ordreSection, 'Description' AS type
FROM section
         JOIN description ON section.idSection = description.sectionID
WHERE section.controleID = 1
ORDER BY ordreSection;


select * from description;



truncate table projet;

drop table projet;
drop schema quizensea;
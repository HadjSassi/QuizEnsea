package com.example.project7.laguage.en;

public enum StringLang {

    oui("Yes"),
    Non("No"),
    Modifier("Change"),
    Fermer("Close"),
    Editheader("Edit the exam header"),
    EditResHeader("Edit Response Header"),
    editerQuizSec("editer_quiz/_3_EditerSection"),
    AjoutSec("Add Section"),
    CheminStyle("/com/example/project7/css/styles.css"),
    Errtext("Error opening the popup: "),
    SelSect("Select a Section"),
    ID("ID"),
    TypSec("Section Type"),
    id("id"),
    type("type"),
    Select("Select"),
    tiret("_"),
    cnt("cnt"),
    QCU("QCU"),
    QCM("QCM"),
    QuesLibre("Open Question"),
    Descrpt("Description"),
    ErrimpSec("Error while inserting imported section: "),
    idsec("idSection"),
    idqcm("idQCM"),
    iddesp("idDescription"),
    ConfCancel("Confirm Cancel"),
    CancelModif("Are you sure to cancel the modifications?"),
    popupmodif("All modifications will be lost!"),
    Home("Home"),
    idcontr("idControle"),
    nomdev("assignmentName"),
    typedev("assignmentType"),
    nombrexemplaire("numberOfCopies"),
    randseed("randomSeed"),
    Examheader("examHeader"),
    Respheader("responseHeader"),
    CreationDate("creationDate"),
    Failedinsertdata("Failed to insert Control data."),
    Errdata("Error inserting data into Control table: "),
    ErrControle("Error checking Control table: "),
    question("question"),
    moveUpButton("↑"),
    modifierButton("i"),
    supprimerButton("X"),
    moveDownButton("↓"),
    ConsignesQuestions("In this document, you will first find the questions then the pages for the answers.\n" +
            "Questions with the symbol :¨: may have zero, one or more correct answers. The others have a single correct answer. " +
            "Negative points are assigned for wrong answers. The weight of wrong answers is zero for the first few wrong answers, " +
            "but then the (negative) weight of wrong answers increases with the number of wrong answers.\n" +
            "A resource document is distributed in addition to this document. You should use the information in this document as a priority.\n"),
    Consigne2("2 detachable sheets (4 pages): only documents to be returned for the Microprocessor exam."),
    Randseedpardefaut("12345678"),
    NbrValue1("1"),
    NbrValue0("0"),
    NbrValue2("2"),
    NbrValue3("3"),
    NbrValue05("0.5"),
    Failedtoupdatesection("Failed to update section: "),
    Errorupdatingsection("Error updating section: "),
    ModifierSectionQCU("Modify QCU Section"),
    Erreurlorsdeouverturedelapopup("Error opening the popup: "),
    ConfirmDeletion("Confirm Deletion"),
    SureofDeletemssg("Are you sure you want to delete section: "),
    PointIntegoration("?"),
    thisactionCantBeDone("This action cannot be undone."),
    Nosect("No section found to delete with idSection: "),
    Errsect("Error deleting section: "),
    QcuetQcm("QCU/QCM"),
    isQCU("isQCU"),
    OrdreSect("ordreSection"),
    Errdataloading("Error loading section data: "),
    response("response"),
    score("score"),
    correct("isCorrect"),
    nbrligne("numberOfLines"),
    taillelign("lineSize"),
    RAPPEL("reminder"),
    scoretotal("totalScore"),
    nbrscore("numberOfScores"),
    text("text"),
    imagpath("imagePath"),
    legendtext("legendText"),
    imgwidth("imageWidth"),
    succes("Success"),
    succesContr("The control has been successfully added."),
    Err("Error"),
    FailedUpdtaeContr("Failed to update the control."),
    Errupdate("Error updating the control: "),
    ErrUpdateProjet("There was an error updating the project!"),
    ErrControl("Error updating the control: "),
    diez("#"),
    Deuxpoints(" : "),
    home("Home"),
    tex(".tex"),
    pathAMC("/com/example/project7/latex/automultiplechoice.sty"),
    RessourcenotFound("Resource automultiplechoice.sty not found."),
    AMCfihcierSTY("automultiplechoice.sty"),
    pdflatex("pdflatex"),
    pdfSucces("PDF generated successfully."),
    pdf(".pdf"),
    PDFNOTFOUND("PDF file not found: "),
    DESKTOPnotsupported("Desktop is not supported on this platform."),
    pdfFAIL("PDF generation failed with exit code: "),
    imgfiles("Image Files"),
    png("*.png"),
    jpg("*.jpg"),
    jpeg("*.jpeg"),
    point("."),
    SectionExists("Section Exists"),
    SectionAlreadyExist("The section already exists"),
    SectionId("Section with identifier "),
    Sectionexistedeja(" already exists, do you want to overwrite it?"),
    cancel("Cancel"),
    x("X"),
    ErrcheckExist("Error checking section existence: "),
    Errinsert("Error inserting Section data: "),
    FailedInsertion("Failed to insert the description."),
    ErrInsert("Error inserting: "),
    ErrloadingQCU("Error loading QCU data: "),
    Textdanger("text-field-danger"),
    CorrAnswer("Correct answer"),
    WrongAnswer("Wrong answer"),
    Supprimer("Delete"),
    ErrdltSec("Error deleting section: "),
    failInsrtQcudata("Failed to insert QCU data."),
    ErrInsrtQcudata("Error inserting QCU data: "),
    ErrWrongAnsw("Error inserting incorrect responses: "),
    EntrBareme("Enter the grading scale"),
    save("Save"),
    close("Close"),
    ChngAnswAndBareme("Change the answer and the grading scale:"),
    ChangAnswr("Change the answer"),
    EdtQues("Edit the Question"),
    EdtCorrAnswr("Edit the correct answer"),
    QuesNmr("Question No."),
    SecID("sectionID"),
    EdtDescrpt("_7_EditDescription"),
    section("Section#"),
    Pane("editer_quiz/"),
    content("The content for "),
    CantCharge(" could not be loaded."),
    Errchargement("Error loading "),
    fxml(".fxml"),
    EditerQCM("_4_EditQCM"),
    EditerQCU("_5_EditQCU"),
    EditerQuestion("_6_EditOpenQuestion"),
    EditerDesp("_7_EditDescription"),
    ErrOrderSec("Error updating section order: "),
    MssgContollErr("Current controller is not an instance of EditerQCU."),
    OUCHY("OUCHY!!"),
    EdtQuizetPrjt("editer_quiz/_2_EditProject"),
    SelectPrjt("You need to select a project first"),
    SelectPrjtOPen("You need to select a project first to open "),
    nomProjet("projectName"),
    PathPrjt("projectLocation"),
    typePrjt("projectType"),
    date("date"),
    idPrjt("projectID"),
    SureDeletePrjt("Are you sure you want to delete project: "),
    ThisActUNDONE("This action cannot be undone, but the files in "),
    willRemain(" will remain"),
    NoprjtFOUND("No project found to delete with identifier: "),
    ErrDELETE("Error deleting project: "),
    ErrCreatingFolder("Error occurred while creating the project folder!"),
    ErrCreatingPrjt("Error occurred while creating the project!"),
    ErrVerfNamePrj("Database error: Could not verify project name!"),
    NameAlreadyExists("Your project name already exists!"),
    EnterNamePrjt("You need to enter the name of your project!"),
    SpecCHAR("[a-zA-Z0-9 _-]+"),
    NoSpecCHAR("The project name must not contain special characters!"),
    StartWithLETTER("Your project name should start with a letter!"),
    ChoosePrjtPATH("You need to choose a project location!"),
    PathNOTFound("The selected location is not valid or does not exist."),
    userHome("user.home"),
    Controle("Control{"),
    espace(""),
    character("[^\\d]"),
    slash("\\."),


    ;

    ;
    private final String name ;

    StringLang(String name) {
        this.name = name;
    }

    public String getValue(){
        return name;
    }
}
